{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/components/Nav.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Link } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport useSWR from 'swr';\n\nvar fetcher = function fetcher(query) {\n  return fetch('/api/graphQL/nav', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: query\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    return json.data;\n  });\n};\n\nexport default function Index() {\n  var _this = this;\n\n  var _useSWR = useSWR('{ title { title }, nav { title, url, target } }', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  });\n  var nav = data.nav;\n  return __jsx(React.Fragment, null, __jsx(Menu, {\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, nav.map(function (item, i) {\n    return __jsx(Link, {\n      href: item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-44012873\" + \" \" + \"menu-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }, item.title));\n  })), __jsx(_JSXStyle, {\n    id: \"44012873\",\n    __self: this\n  }, \".loader{border:16px solid #000;border-top:16px solid #4fec8e;border-radius:50%;width:120px;height:120px;-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite;z-index:9999;position:absolute;top:50%;left:50%;margin-top:-35px;margin-left:-35px;}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}@keyframes spin{0%{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}.bm-menu-wrap{width:100% !important;}@media screen and (min-width:426px){.bm-menu-wrap{width:14% !important;}}.bm-item{display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-bottom:10px;color:#000;-webkit-transition:color 0.2s;transition:color 0.2s;}.bm-item:focus{outline:0;color:#000;}.bm-item:hover{color:#00adff;}.bm-burger-button{position:fixed;width:36px;height:30px;right:36px;top:36px;}.bm-burger-bars{background:#fff;}.bm-cross-button{height:24px;width:24px;}.bm-cross{background:#000;}.bm-menu{background:#fff;padding:2.5em 1.5em 0;font-size:1.15em;padding:2rem 2rem 1.5rem 2rem;}.bm-morph-shape{fill:#373a47;}.bm-item-list{color:#b8b7ad;padding:6rem 0 0 0;}.bm-overlay{background:rgba(0,0,0,0.3);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYW1lc3dhbGxlci8yMDIwLXBvcnRmb2xpby9jb21wb25lbnRzL05hdi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QnVCLEFBRzhCLEFBZUksQUFDSSxBQUlULEFBSUMsQUFLRixBQVVaLEFBTUssQUFPQyxBQVNDLEFBS0osQUFNSSxBQUtBLEFBUUgsQUFLQyxBQU1nQixVQXhEbkIsRUEyQkEsQ0FtQmIsQ0F4Q0EsQUE4Q0QsQ0F2Q2MsQ0FTYixBQVdBLEFBS3dCLEtBckR0QixBQU9xQixBQVN2QixDQXBCQSxDQXBCZ0MsQUFtRWhDLEdBZGMsQ0EyQ2QsTUFMQSxLQXJDYSxBQXdCTSxXQXZCUixJQXREUyxFQThFWSxHQXZCaEMsYUF0RGMsQUE4Qk8sVUFsQlMsRUFYZixFQTZFZixFQWpFa0MsR0FrQnJCLE1BN0J1QixLQThCWixvREFDeEIsbUJBOUJlLGFBQ0ssa0JBQ1YsUUFDQyxTQUNRLGlCQUNDLGtCQUNwQiIsImZpbGUiOiIvVXNlcnMvamFtZXN3YWxsZXIvMjAyMC1wb3J0Zm9saW8vY29tcG9uZW50cy9OYXYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgTGluayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgc2xpZGUgYXMgTWVudSB9IGZyb20gXCJyZWFjdC1idXJnZXItbWVudVwiO1xuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InXG5cbmNvbnN0IGZldGNoZXIgPSBxdWVyeSA9PlxuICBmZXRjaCgnL2FwaS9ncmFwaFFML25hdicsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBxdWVyeSB9KSxcbiAgfSlcbiAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAudGhlbihqc29uID0+IGpzb24uZGF0YSlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUigneyB0aXRsZSB7IHRpdGxlIH0sIG5hdiB7IHRpdGxlLCB1cmwsIHRhcmdldCB9IH0nLCBmZXRjaGVyKVxuXG4gIGlmIChlcnJvcikgcmV0dXJuIDxkaXY+RmFpbGVkIHRvIGxvYWQ8L2Rpdj5cbiAgaWYgKCFkYXRhKSByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJsb2FkZXJcIj48L2Rpdj5cblxuICBjb25zdCB7IG5hdiB9ID0gZGF0YVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8TWVudSByaWdodD5cbiAgICAgIHtuYXYubWFwKChpdGVtLCBpKSA9PiAoXG4gICAgICAgIDxMaW5rIGhyZWY9e2l0ZW0udXJsfT48YSBjbGFzc05hbWU9XCJtZW51LWl0ZW1cIj57aXRlbS50aXRsZX08L2E+PC9MaW5rPlxuICAgICAgKSl9XG4gICAgPC9NZW51PlxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgLmxvYWRlciB7XG4gICAgICBib3JkZXI6IDE2cHggc29saWQgIzAwMDtcbiAgICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzRmZWM4ZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgIGhlaWdodDogMTIwcHg7XG4gICAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xuICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgbWFyZ2luLXRvcDogLTM1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogLTM1cHg7XG4gICAgfVxuXG4gICAgQGtleWZyYW1lcyBzcGluIHtcbiAgICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cbiAgICAgIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XG4gICAgfVxuXG4gICAgLmJtLW1lbnUtd3JhcCB7XG4gICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MjZweCkge1xuICAgICAgLmJtLW1lbnUtd3JhcCB7XG4gICAgICAgIHdpZHRoOiAxNCUgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gICAgLyogSW5kaXZpZHVhbCBpdGVtICovXG4gICAgLmJtLWl0ZW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgICAvKiBPdXIgc2lkZWJhciBpdGVtIHN0eWxpbmcgKi9cbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICBjb2xvcjogIzAwMDtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XG4gICAgfVxuXG4gICAgLmJtLWl0ZW06Zm9jdXMge1xuICAgICAgb3V0bGluZTowO1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxuXG4gICAgLyogQ2hhbmdlIGNvbG9yIG9uIGhvdmVyICovXG4gICAgLmJtLWl0ZW06aG92ZXIge1xuICAgICAgY29sb3I6ICMwMGFkZmY7XG4gICAgfVxuXG4gICAgLyogVGhlIHJlc3QgY29waWVkIGRpcmVjdGx5IGZyb20gcmVhY3QtYnVyZ2VyLW1lbnUgZG9jcyAqL1xuXG4gICAgLyogUG9zaXRpb24gYW5kIHNpemluZyBvZiBidXJnZXIgYnV0dG9uICovXG4gICAgLmJtLWJ1cmdlci1idXR0b24ge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICByaWdodDogMzZweDtcbiAgICAgIHRvcDogMzZweDtcbiAgICB9XG5cbiAgICAvKiBDb2xvci9zaGFwZSBvZiBidXJnZXIgaWNvbiBiYXJzICovXG4gICAgLmJtLWJ1cmdlci1iYXJzIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgfVxuXG4gICAgLyogUG9zaXRpb24gYW5kIHNpemluZyBvZiBjbGlja2FibGUgY3Jvc3MgYnV0dG9uICovXG4gICAgLmJtLWNyb3NzLWJ1dHRvbiB7XG4gICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICB3aWR0aDogMjRweDtcbiAgICB9XG5cbiAgICAvKiBDb2xvci9zaGFwZSBvZiBjbG9zZSBidXR0b24gY3Jvc3MgKi9cbiAgICAuYm0tY3Jvc3Mge1xuICAgICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICB9XG5cbiAgICAvKiBHZW5lcmFsIHNpZGViYXIgc3R5bGVzICovXG4gICAgLmJtLW1lbnUge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIHBhZGRpbmc6IDIuNWVtIDEuNWVtIDA7XG4gICAgICBmb250LXNpemU6IDEuMTVlbTtcbiAgICAgIHBhZGRpbmc6IDJyZW0gMnJlbSAxLjVyZW0gMnJlbTtcbiAgICB9XG5cbiAgICAvKiBNb3JwaCBzaGFwZSBuZWNlc3Nhcnkgd2l0aCBidWJibGUgb3IgZWxhc3RpYyAqL1xuICAgIC5ibS1tb3JwaC1zaGFwZSB7XG4gICAgICBmaWxsOiAjMzczYTQ3O1xuICAgIH1cblxuICAgIC8qIFdyYXBwZXIgZm9yIGl0ZW0gbGlzdCAqL1xuICAgIC5ibS1pdGVtLWxpc3Qge1xuICAgICAgY29sb3I6ICNiOGI3YWQ7XG4gICAgICBwYWRkaW5nOiA2cmVtIDAgMCAwXG4gICAgfVxuXG4gICAgLyogU3R5bGluZyBvZiBvdmVybGF5ICovXG4gICAgLmJtLW92ZXJsYXkge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgIH1cbiAgYH08L3N0eWxlPlxuICA8Lz5cbiAgKVxufSJdfQ== */\\n/*@ sourceURL=/Users/jameswaller/2020-portfolio/components/Nav.js */\"));\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/components/Nav.js"],"names":["React","Link","slide","Menu","useSWR","fetcher","query","fetch","method","headers","body","JSON","stringify","then","res","json","data","Index","error","nav","map","item","i","url","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnBC,KAAK,CAAC,kBAAD,EAAqB;AACxBC,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFe;AAKxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,KAAK,EAALA;AAAF,KAAf;AALkB,GAArB,CAAL,CAOGO,IAPH,CAOQ,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAPX,EAQGF,IARH,CAQQ,UAAAE,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GARZ,CADmB;AAAA,CAArB;;AAWA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,gBACNb,MAAM,CAAC,iDAAD,EAAoDC,OAApD,CADA;AAAA,MACtBW,IADsB,WACtBA,IADsB;AAAA,MAChBE,KADgB,WAChBA,KADgB;;AAG9B,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAJmB,MAMtBG,GANsB,GAMdH,IANc,CAMtBG,GANsB;AAQ9B,SACE,4BACA,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAOC,CAAP;AAAA,WACP,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAI,CAACE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB;AAAA,wCAAa,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BF,IAAI,CAACG,KAA/B,CAAtB,CADO;AAAA,GAAR,CADH,CADA;AAAA;AAAA;AAAA,yiMADF;AA8GD","sourcesContent":["import React, { Link } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport useSWR from 'swr'\n\nconst fetcher = query =>\n  fetch('/api/graphQL/nav', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n\nexport default function Index() {\n  const { data, error } = useSWR('{ title { title }, nav { title, url, target } }', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div className=\"loader\"></div>\n\n  const { nav } = data\n\n  return (\n    <>\n    <Menu right>\n      {nav.map((item, i) => (\n        <Link href={item.url}><a className=\"menu-item\">{item.title}</a></Link>\n      ))}\n    </Menu>\n    <style jsx global>{`\n    .loader {\n      border: 16px solid #000;\n      border-top: 16px solid #4fec8e;\n      border-radius: 50%;\n      width: 120px;\n      height: 120px;\n      animation: spin 2s linear infinite;\n      z-index: 9999;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      margin-top: -35px;\n      margin-left: -35px;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .bm-menu-wrap {\n      width: 100% !important;\n    }\n    @media screen and (min-width: 426px) {\n      .bm-menu-wrap {\n        width: 14% !important;\n      }\n    }\n    /* Individual item */\n    .bm-item {\n      display: inline-block;\n\n      /* Our sidebar item styling */\n      text-decoration: none;\n      margin-bottom: 10px;\n      color: #000;\n      transition: color 0.2s;\n    }\n\n    .bm-item:focus {\n      outline:0;\n      color: #000;\n    }\n\n    /* Change color on hover */\n    .bm-item:hover {\n      color: #00adff;\n    }\n\n    /* The rest copied directly from react-burger-menu docs */\n\n    /* Position and sizing of burger button */\n    .bm-burger-button {\n      position: fixed;\n      width: 36px;\n      height: 30px;\n      right: 36px;\n      top: 36px;\n    }\n\n    /* Color/shape of burger icon bars */\n    .bm-burger-bars {\n      background: #fff;\n    }\n\n    /* Position and sizing of clickable cross button */\n    .bm-cross-button {\n      height: 24px;\n      width: 24px;\n    }\n\n    /* Color/shape of close button cross */\n    .bm-cross {\n      background: #000;\n    }\n\n    /* General sidebar styles */\n    .bm-menu {\n      background: #fff;\n      padding: 2.5em 1.5em 0;\n      font-size: 1.15em;\n      padding: 2rem 2rem 1.5rem 2rem;\n    }\n\n    /* Morph shape necessary with bubble or elastic */\n    .bm-morph-shape {\n      fill: #373a47;\n    }\n\n    /* Wrapper for item list */\n    .bm-item-list {\n      color: #b8b7ad;\n      padding: 6rem 0 0 0\n    }\n\n    /* Styling of overlay */\n    .bm-overlay {\n      background: rgba(0, 0, 0, 0.3);\n    }\n  `}</style>\n  </>\n  )\n}"]},"metadata":{},"sourceType":"module"}