{"ast":null,"code":"import { ApolloServer, gql } from 'apollo-server-micro';\nconst typeDefs = gql`\n  type Query {\n    nav: [Items!]!,\n  }\n  type Items {\n    id: ID,\n    title: String,\n    url: String,\n  }\n`;\nconst resolvers = {\n  Query: {\n    nav(parent, args, context) {\n      return [{\n        id: 1,\n        title: 'Homepage',\n        url: '/'\n      }, {\n        id: 2,\n        title: 'About me',\n        url: '/about'\n      }, {\n        id: 3,\n        title: 'Services',\n        url: '/services'\n      }, {\n        id: 4,\n        title: 'Portfolio',\n        url: '/portfolio'\n      }, {\n        id: 5,\n        title: 'Resume',\n        url: '/resume'\n      }];\n    }\n\n  }\n};\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default apolloServer.createHandler({\n  path: '/api/nav'\n});","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/pages/api/nav.js"],"names":["ApolloServer","gql","typeDefs","resolvers","Query","nav","parent","args","context","id","title","url","apolloServer","config","api","bodyParser","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,GAAvB,QAAkC,qBAAlC;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;;;CAArB;AAWA,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,OAAf,EAAwB;AACzB,aAAO,CAAC;AACFC,QAAAA,EAAE,EAAE,CADF;AAEFC,QAAAA,KAAK,EAAE,UAFL;AAGFC,QAAAA,GAAG,EAAE;AAHH,OAAD,EAKL;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,GAAG,EAAE;AAHT,OALK,EAUL;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,GAAG,EAAE;AAHT,OAVK,EAeL;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,WAFX;AAGIC,QAAAA,GAAG,EAAE;AAHT,OAfK,EAoBL;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,GAAG,EAAE;AAHT,OApBK,CAAP;AAyBA;;AA3BG;AADS,CAAlB;AAgCA,MAAMC,YAAY,GAAG,IAAIZ,YAAJ,CAAiB;AAAEE,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjB,CAArB;AAEA,OAAO,MAAMU,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeH,YAAY,CAACI,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAf","sourcesContent":["import { ApolloServer, gql } from 'apollo-server-micro'\n\nconst typeDefs = gql`\n  type Query {\n    nav: [Items!]!,\n  }\n  type Items {\n    id: ID,\n    title: String,\n    url: String,\n  }\n`\n\nconst resolvers = {\n  Query: {\n    nav(parent, args, context) {\n      return [{\n            id: 1,\n            title: 'Homepage',\n            url: '/',\n        },\n        {\n            id: 2,\n            title: 'About me',\n            url: '/about',\n        },\n        {\n            id: 3,\n            title: 'Services',\n            url: '/services',\n        },\n        {\n            id: 4,\n            title: 'Portfolio',\n            url: '/portfolio',\n        },\n        {\n            id: 5,\n            title: 'Resume',\n            url: '/resume',\n        }\n    ]},\n  },\n}\n\nconst apolloServer = new ApolloServer({ typeDefs, resolvers })\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n}\n\nexport default apolloServer.createHandler({ path: '/api/nav' })"]},"metadata":{},"sourceType":"module"}