{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/components/Nav.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import React from \"react\";\n// import { slide as Menu } from \"react-burger-menu\";\n// export default props => {\n//   return (\n//     <>\n//     <Menu right>\n//       <a className=\"menu-item\" href=\"/\">\n//         Home\n//       </a>\n//       <a className=\"menu-item\" href=\"/about\">\n//         About\n//       </a>\n//       <a className=\"menu-item\" href=\"/services\">\n//         Services\n//       </a>\n//       <a className=\"menu-item\" href=\"/portfolio\">\n//         Portfolio\n//       </a>\n//       <a className=\"menu-item\" href=\"/resume\">\n//         Resume\n//       </a>\n//     </Menu>\n//     <style jsx global>{`\n//         .bm-menu-wrap {\n//           width: 100% !important;\n//         }\n//         @media screen and (min-width: 426px) {\n//           .bm-menu-wrap {\n//             width: 300px !important;\n//           }\n//         }\n//         /* Individual item */\n//         .bm-item {\n//           display: inline-block;\n//           /* Our sidebar item styling */\n//           text-decoration: none;\n//           margin-bottom: 10px;\n//           color: #000;\n//           transition: color 0.2s;\n//         }\n//         .bm-item:focus {\n//           outline:0;\n//         }\n//         /* Change color on hover */\n//         .bm-item:hover {\n//           color: #31deff;\n//         }\n//         /* The rest copied directly from react-burger-menu docs */\n//         /* Position and sizing of burger button */\n//         .bm-burger-button {\n//           position: fixed;\n//           width: 36px;\n//           height: 30px;\n//           right: 36px;\n//           top: 36px;\n//         }\n//         /* Color/shape of burger icon bars */\n//         .bm-burger-bars {\n//           background: #fff;\n//         }\n//         /* Position and sizing of clickable cross button */\n//         .bm-cross-button {\n//           height: 24px;\n//           width: 24px;\n//         }\n//         /* Color/shape of close button cross */\n//         .bm-cross {\n//           background: #000;\n//         }\n//         /* General sidebar styles */\n//         .bm-menu {\n//           background: #fff;\n//           padding: 2.5em 1.5em 0;\n//           font-size: 1.15em;\n//           padding: 2rem 2rem 1.5rem 2rem;\n//         }\n//         /* Morph shape necessary with bubble or elastic */\n//         .bm-morph-shape {\n//           fill: #373a47;\n//         }\n//         /* Wrapper for item list */\n//         .bm-item-list {\n//           color: #b8b7ad;\n//           padding: 6rem 0 0 0\n//         }\n//         /* Styling of overlay */\n//         .bm-overlay {\n//           background: rgba(0, 0, 0, 0.3);\n//         }\n//       `}</style>\n//     </>\n//   );\n// };\nimport useSWR from 'swr';\n\nconst fetcher = query => fetch('/api/nav', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n}).then(res => res.json()).then(json => json.data);\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('{ nav { name } }', fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  const {\n    users\n  } = data;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, users.map((user, i) => __jsx(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, user.name)));\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/components/Nav.js"],"names":["useSWR","fetcher","query","fetch","method","headers","body","JSON","stringify","then","res","json","data","Index","error","users","map","user","i","name"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IACnBC,KAAK,CAAC,UAAD,EAAa;AAChBC,EAAAA,MAAM,EAAE,MADQ;AAEhBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFO;AAKhBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA;AAAF,GAAf;AALU,CAAb,CAAL,CAOGO,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQE,IAAI,IAAIA,IAAI,CAACC,IARrB,CADF;;AAWA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAED,IAAAA,IAAF;AAAQE,IAAAA;AAAR,MAAkBd,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CAA9B;AAEA,MAAIa,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,QAAM;AAAEG,IAAAA;AAAF,MAAYH,IAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAI,CAACE,IAAnB,CADD,CADH,CADF;AAOD","sourcesContent":["// import React from \"react\";\n// import { slide as Menu } from \"react-burger-menu\";\n\n// export default props => {\n//   return (\n//     <>\n//     <Menu right>\n//       <a className=\"menu-item\" href=\"/\">\n//         Home\n//       </a>\n//       <a className=\"menu-item\" href=\"/about\">\n//         About\n//       </a>\n//       <a className=\"menu-item\" href=\"/services\">\n//         Services\n//       </a>\n//       <a className=\"menu-item\" href=\"/portfolio\">\n//         Portfolio\n//       </a>\n//       <a className=\"menu-item\" href=\"/resume\">\n//         Resume\n//       </a>\n//     </Menu>\n//     <style jsx global>{`\n//         .bm-menu-wrap {\n//           width: 100% !important;\n//         }\n//         @media screen and (min-width: 426px) {\n//           .bm-menu-wrap {\n//             width: 300px !important;\n//           }\n//         }\n//         /* Individual item */\n//         .bm-item {\n//           display: inline-block;\n\n//           /* Our sidebar item styling */\n//           text-decoration: none;\n//           margin-bottom: 10px;\n//           color: #000;\n//           transition: color 0.2s;\n//         }\n\n//         .bm-item:focus {\n//           outline:0;\n//         }\n\n//         /* Change color on hover */\n//         .bm-item:hover {\n//           color: #31deff;\n//         }\n\n//         /* The rest copied directly from react-burger-menu docs */\n\n//         /* Position and sizing of burger button */\n//         .bm-burger-button {\n//           position: fixed;\n//           width: 36px;\n//           height: 30px;\n//           right: 36px;\n//           top: 36px;\n//         }\n\n//         /* Color/shape of burger icon bars */\n//         .bm-burger-bars {\n//           background: #fff;\n//         }\n\n//         /* Position and sizing of clickable cross button */\n//         .bm-cross-button {\n//           height: 24px;\n//           width: 24px;\n//         }\n\n//         /* Color/shape of close button cross */\n//         .bm-cross {\n//           background: #000;\n//         }\n\n//         /* General sidebar styles */\n//         .bm-menu {\n//           background: #fff;\n//           padding: 2.5em 1.5em 0;\n//           font-size: 1.15em;\n//           padding: 2rem 2rem 1.5rem 2rem;\n//         }\n\n//         /* Morph shape necessary with bubble or elastic */\n//         .bm-morph-shape {\n//           fill: #373a47;\n//         }\n\n//         /* Wrapper for item list */\n//         .bm-item-list {\n//           color: #b8b7ad;\n//           padding: 6rem 0 0 0\n//         }\n\n//         /* Styling of overlay */\n//         .bm-overlay {\n//           background: rgba(0, 0, 0, 0.3);\n//         }\n//       `}</style>\n//     </>\n//   );\n// };\n\n\nimport useSWR from 'swr'\n\nconst fetcher = query =>\n  fetch('/api/nav', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n\nexport default function Index() {\n  const { data, error } = useSWR('{ nav { name } }', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div>Loading...</div>\n\n  const { users } = data\n\n  return (\n    <div>\n      {users.map((user, i) => (\n        <div key={i}>{user.name}</div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}