{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/components/Nav.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport useSWR from 'swr';\n\nvar fetcher = function fetcher(query) {\n  return fetch('/api/nav', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: query\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    return json.data;\n  });\n};\n\nexport default function Index() {\n  var _this = this;\n\n  var _useSWR = useSWR('{ title { title }, nav { title, url } }', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  var nav = data.nav;\n  return __jsx(React.Fragment, null, __jsx(Menu, {\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, nav.map(function (item, i) {\n    return __jsx(\"a\", {\n      href: item.url,\n      className: \"jsx-4267541730\" + \" \" + \"menu-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, item.title);\n  })), __jsx(_JSXStyle, {\n    id: \"4267541730\",\n    __self: this\n  }, \".bm-menu-wrap{width:100% !important;}@media screen and (min-width:426px){.bm-menu-wrap{width:300px !important;}}.bm-item{display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-bottom:10px;color:#000;-webkit-transition:color 0.2s;transition:color 0.2s;}.bm-item:focus{outline:0;}.bm-item:hover{color:#31deff;}.bm-burger-button{position:fixed;width:36px;height:30px;right:36px;top:36px;}.bm-burger-bars{background:#fff;}.bm-cross-button{height:24px;width:24px;}.bm-cross{background:#000;}.bm-menu{background:#fff;padding:2.5em 1.5em 0;font-size:1.15em;padding:2rem 2rem 1.5rem 2rem;}.bm-morph-shape{fill:#373a47;}.bm-item-list{color:#b8b7ad;padding:6rem 0 0 0;}.bm-overlay{background:rgba(0,0,0,0.3);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYW1lc3dhbGxlci8yMDIwLXBvcnRmb2xpby9jb21wb25lbnRzL05hdi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QnVCLEFBRzZCLEFBSUcsQUFLSixBQVVaLEFBS0ssQUFPQyxBQVNDLEFBS0osQUFNSSxBQUtBLEFBUUgsQUFLQyxBQU1nQixVQXZEaEMsRUEwQmEsQ0FtQmIsQ0F4Q0EsQUE4Q0QsQ0F2Q2MsQ0FTYixBQVdBLEFBS3dCLEtBN0NELENBWHZCLENBSUUsQUEwQ0YsR0FkYyxDQTJDZCxNQUxBLEtBckNhLEFBd0JNLFdBdkJSLE1Bd0JxQixHQXZCaEMsYUF2QnFCLGNBK0NyQixLQTlDYSxXQUNXLG9EQUN4QiIsImZpbGUiOiIvVXNlcnMvamFtZXN3YWxsZXIvMjAyMC1wb3J0Zm9saW8vY29tcG9uZW50cy9OYXYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBzbGlkZSBhcyBNZW51IH0gZnJvbSBcInJlYWN0LWJ1cmdlci1tZW51XCI7XG5pbXBvcnQgdXNlU1dSIGZyb20gJ3N3cidcblxuY29uc3QgZmV0Y2hlciA9IHF1ZXJ5ID0+XG4gIGZldGNoKCcvYXBpL25hdicsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBxdWVyeSB9KSxcbiAgfSlcbiAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAudGhlbihqc29uID0+IGpzb24uZGF0YSlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUigneyB0aXRsZSB7IHRpdGxlIH0sIG5hdiB7IHRpdGxlLCB1cmwgfSB9JywgZmV0Y2hlcilcblxuICBpZiAoZXJyb3IpIHJldHVybiA8ZGl2PkZhaWxlZCB0byBsb2FkPC9kaXY+XG4gIGlmICghZGF0YSkgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PlxuXG4gIGNvbnN0IHsgbmF2IH0gPSBkYXRhXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgIDxNZW51IHJpZ2h0PlxuICAgICAge25hdi5tYXAoKGl0ZW0sIGkpID0+IChcbiAgICAgICAgPGEgY2xhc3NOYW1lPVwibWVudS1pdGVtXCIgaHJlZj17aXRlbS51cmx9PntpdGVtLnRpdGxlfTwvYT5cbiAgICAgICkpfVxuICAgIDwvTWVudT5cbiAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgIC5ibS1tZW51LXdyYXAge1xuICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDI2cHgpIHtcbiAgICAgIC5ibS1tZW51LXdyYXAge1xuICAgICAgICB3aWR0aDogMzAwcHggIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gICAgLyogSW5kaXZpZHVhbCBpdGVtICovXG4gICAgLmJtLWl0ZW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgICAvKiBPdXIgc2lkZWJhciBpdGVtIHN0eWxpbmcgKi9cbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICBjb2xvcjogIzAwMDtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XG4gICAgfVxuXG4gICAgLmJtLWl0ZW06Zm9jdXMge1xuICAgICAgb3V0bGluZTowO1xuICAgIH1cblxuICAgIC8qIENoYW5nZSBjb2xvciBvbiBob3ZlciAqL1xuICAgIC5ibS1pdGVtOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjMzFkZWZmO1xuICAgIH1cblxuICAgIC8qIFRoZSByZXN0IGNvcGllZCBkaXJlY3RseSBmcm9tIHJlYWN0LWJ1cmdlci1tZW51IGRvY3MgKi9cblxuICAgIC8qIFBvc2l0aW9uIGFuZCBzaXppbmcgb2YgYnVyZ2VyIGJ1dHRvbiAqL1xuICAgIC5ibS1idXJnZXItYnV0dG9uIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHdpZHRoOiAzNnB4O1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgcmlnaHQ6IDM2cHg7XG4gICAgICB0b3A6IDM2cHg7XG4gICAgfVxuXG4gICAgLyogQ29sb3Ivc2hhcGUgb2YgYnVyZ2VyIGljb24gYmFycyAqL1xuICAgIC5ibS1idXJnZXItYmFycyB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIH1cblxuICAgIC8qIFBvc2l0aW9uIGFuZCBzaXppbmcgb2YgY2xpY2thYmxlIGNyb3NzIGJ1dHRvbiAqL1xuICAgIC5ibS1jcm9zcy1idXR0b24ge1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgd2lkdGg6IDI0cHg7XG4gICAgfVxuXG4gICAgLyogQ29sb3Ivc2hhcGUgb2YgY2xvc2UgYnV0dG9uIGNyb3NzICovXG4gICAgLmJtLWNyb3NzIHtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgfVxuXG4gICAgLyogR2VuZXJhbCBzaWRlYmFyIHN0eWxlcyAqL1xuICAgIC5ibS1tZW51IHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICBwYWRkaW5nOiAyLjVlbSAxLjVlbSAwO1xuICAgICAgZm9udC1zaXplOiAxLjE1ZW07XG4gICAgICBwYWRkaW5nOiAycmVtIDJyZW0gMS41cmVtIDJyZW07XG4gICAgfVxuXG4gICAgLyogTW9ycGggc2hhcGUgbmVjZXNzYXJ5IHdpdGggYnViYmxlIG9yIGVsYXN0aWMgKi9cbiAgICAuYm0tbW9ycGgtc2hhcGUge1xuICAgICAgZmlsbDogIzM3M2E0NztcbiAgICB9XG5cbiAgICAvKiBXcmFwcGVyIGZvciBpdGVtIGxpc3QgKi9cbiAgICAuYm0taXRlbS1saXN0IHtcbiAgICAgIGNvbG9yOiAjYjhiN2FkO1xuICAgICAgcGFkZGluZzogNnJlbSAwIDAgMFxuICAgIH1cblxuICAgIC8qIFN0eWxpbmcgb2Ygb3ZlcmxheSAqL1xuICAgIC5ibS1vdmVybGF5IHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICB9XG4gIGB9PC9zdHlsZT5cbiAgPC8+XG4gIClcbn0iXX0= */\\n/*@ sourceURL=/Users/jameswaller/2020-portfolio/components/Nav.js */\"));\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/components/Nav.js"],"names":["React","slide","Menu","useSWR","fetcher","query","fetch","method","headers","body","JSON","stringify","then","res","json","data","Index","error","nav","map","item","i","url","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnBC,KAAK,CAAC,UAAD,EAAa;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFO;AAKhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,KAAK,EAALA;AAAF,KAAf;AALU,GAAb,CAAL,CAOGO,IAPH,CAOQ,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAPX,EAQGF,IARH,CAQQ,UAAAE,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GARZ,CADmB;AAAA,CAArB;;AAWA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,gBACNb,MAAM,CAAC,yCAAD,EAA4CC,OAA5C,CADA;AAAA,MACtBW,IADsB,WACtBA,IADsB;AAAA,MAChBE,KADgB,WAChBA,KADgB;;AAG9B,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAJmB,MAMtBG,GANsB,GAMdH,IANc,CAMtBG,GANsB;AAQ9B,SACE,4BACA,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAOC,CAAP;AAAA,WACP;AAAyB,MAAA,IAAI,EAAED,IAAI,CAACE,GAApC;AAAA,0CAAa,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CF,IAAI,CAACG,KAA/C,CADO;AAAA,GAAR,CADH,CADA;AAAA;AAAA;AAAA,0jJADF;AAyFD","sourcesContent":["import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport useSWR from 'swr'\n\nconst fetcher = query =>\n  fetch('/api/nav', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n\nexport default function Index() {\n  const { data, error } = useSWR('{ title { title }, nav { title, url } }', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div>Loading...</div>\n\n  const { nav } = data\n\n  return (\n    <>\n    <Menu right>\n      {nav.map((item, i) => (\n        <a className=\"menu-item\" href={item.url}>{item.title}</a>\n      ))}\n    </Menu>\n    <style jsx global>{`\n    .bm-menu-wrap {\n      width: 100% !important;\n    }\n    @media screen and (min-width: 426px) {\n      .bm-menu-wrap {\n        width: 300px !important;\n      }\n    }\n    /* Individual item */\n    .bm-item {\n      display: inline-block;\n\n      /* Our sidebar item styling */\n      text-decoration: none;\n      margin-bottom: 10px;\n      color: #000;\n      transition: color 0.2s;\n    }\n\n    .bm-item:focus {\n      outline:0;\n    }\n\n    /* Change color on hover */\n    .bm-item:hover {\n      color: #31deff;\n    }\n\n    /* The rest copied directly from react-burger-menu docs */\n\n    /* Position and sizing of burger button */\n    .bm-burger-button {\n      position: fixed;\n      width: 36px;\n      height: 30px;\n      right: 36px;\n      top: 36px;\n    }\n\n    /* Color/shape of burger icon bars */\n    .bm-burger-bars {\n      background: #fff;\n    }\n\n    /* Position and sizing of clickable cross button */\n    .bm-cross-button {\n      height: 24px;\n      width: 24px;\n    }\n\n    /* Color/shape of close button cross */\n    .bm-cross {\n      background: #000;\n    }\n\n    /* General sidebar styles */\n    .bm-menu {\n      background: #fff;\n      padding: 2.5em 1.5em 0;\n      font-size: 1.15em;\n      padding: 2rem 2rem 1.5rem 2rem;\n    }\n\n    /* Morph shape necessary with bubble or elastic */\n    .bm-morph-shape {\n      fill: #373a47;\n    }\n\n    /* Wrapper for item list */\n    .bm-item-list {\n      color: #b8b7ad;\n      padding: 6rem 0 0 0\n    }\n\n    /* Styling of overlay */\n    .bm-overlay {\n      background: rgba(0, 0, 0, 0.3);\n    }\n  `}</style>\n  </>\n  )\n}"]},"metadata":{},"sourceType":"module"}