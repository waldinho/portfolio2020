{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nconst fetcher = query => fetch('/api/about', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n}).then(res => res.json()).then(json => json.data);\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('{ about { title, text } }', fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  const {\n    about\n  } = data;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, about.map((item, i) => __jsx(React.Fragment, null, __jsx(\"h1\", {\n    key: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, item.title), __jsx(\"div\", {\n    key: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, item.text))));\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/pages/about.js"],"names":["useSWR","fetcher","query","fetch","method","headers","body","JSON","stringify","then","res","json","data","Index","error","about","map","item","i","title","text"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IACnBC,KAAK,CAAC,YAAD,EAAe;AAClBC,EAAAA,MAAM,EAAE,MADU;AAElBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFS;AAKlBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA;AAAF,GAAf;AALY,CAAf,CAAL,CAOGO,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQE,IAAI,IAAIA,IAAI,CAACC,IARrB,CADF;;AAWA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAED,IAAAA,IAAF;AAAQE,IAAAA;AAAR,MAAkBd,MAAM,CAAC,2BAAD,EAA8BC,OAA9B,CAA9B;AAEA,MAAIa,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,QAAM;AAAEG,IAAAA;AAAF,MAAYH,IAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT,4BACI;AAAI,IAAA,GAAG,EAAED,IAAI,CAACE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,IAAI,CAACE,KAA3B,CADJ,EAEI;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBH,IAAI,CAACG,IAA3B,CAFJ,CADD,CADH,CADF;AAUD","sourcesContent":["\nimport useSWR from 'swr'\n\nconst fetcher = query =>\n  fetch('/api/about', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n\nexport default function Index() {\n  const { data, error } = useSWR('{ about { title, text } }', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div>Loading...</div>\n\n  const { about } = data\n\n  return (\n    <div>\n      {about.map((item, i) => (\n        <>\n            <h1 key={item.title}>{item.title}</h1>\n            <div key={item.text}>{item.text}</div>\n        </>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}