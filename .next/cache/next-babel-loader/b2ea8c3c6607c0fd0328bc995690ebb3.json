{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nconst fetcher = url => fetch(url).then(res => res.json());\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('/api/about', fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, about.map((a, i) => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, a.title)));\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/pages/about.js"],"names":["useSWR","fetcher","url","fetch","then","res","json","Index","data","error","about","map","a","i","title"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAIC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,CAAvB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,YAAD,EAAeC,OAAf,CAA9B;AAEA,MAAIQ,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACC,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,CAAC,CAACE,KAAN,CADD,CADH,CADF;AAOD","sourcesContent":["import useSWR from 'swr'\n\nconst fetcher = url => fetch(url).then(res => res.json())\n\nexport default function Index() {\n  const { data, error } = useSWR('/api/about', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div>Loading...</div>\n\n  return (\n    <ul>\n      {about.map((a, i) => (\n        <p>{a.title}</p>\n      ))}\n    </ul>\n  )\n}"]},"metadata":{},"sourceType":"module"}