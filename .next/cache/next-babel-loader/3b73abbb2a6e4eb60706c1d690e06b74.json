{"ast":null,"code":"var _jsxFileName = \"/Users/jameswaller/2020-portfolio/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from \"react\";\nimport FluidAnimation from \"react-fluid-animation\";\nimport random from \"random\";\nimport 'global/styles';\nimport Logo from '../components/Logo';\nimport Nav from '../components/Nav';\nconst defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005\n};\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      config: _objectSpread({}, defaultConfig)\n    });\n\n    _defineProperty(this, \"_animationRef\", ref => {\n      this._animation = ref;\n\n      this._reset();\n    });\n\n    _defineProperty(this, \"_onUpdate\", config => {\n      this.setState({\n        config\n      });\n    });\n\n    _defineProperty(this, \"_onClickRandomSplats\", () => {\n      this._animation.addSplats(5 + Math.random() * 20 | 0);\n    });\n\n    _defineProperty(this, \"_onReset\", () => {\n      this.setState({\n        config: _objectSpread({}, defaultConfig)\n      });\n    });\n  }\n\n  componentDidMount() {\n    this._reset();\n  }\n\n  render() {\n    const {\n      config\n    } = this.state;\n\n    const greeting = () => {\n      const today = new Date();\n      const curHr = today.getHours();\n\n      if (curHr < 12) {\n        return 'morning';\n      } else if (curHr < 17) {\n        return 'afternoon';\n      } else {\n        return 'evening';\n      }\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"James Waller | Digital\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })), __jsx(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      style: {\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(FluidAnimation, {\n      config: config,\n      animationRef: this._animationRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        padding: \"1em 10em\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"left\",\n        color: \"#fff\",\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"6em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"_Good_\", greeting(), \".\"))));\n  }\n\n  _reset() {\n    if (this._animation) {\n      this._animation.addRandomSplats(random.int(100, 180));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jameswaller/2020-portfolio/pages/index.js"],"names":["Head","React","Component","FluidAnimation","random","Logo","Nav","defaultConfig","textureDownsample","densityDissipation","velocityDissipation","pressureDissipation","pressureIterations","curl","splatRadius","Home","config","ref","_animation","_reset","setState","addSplats","Math","componentDidMount","render","state","greeting","today","Date","curHr","getHours","height","_animationRef","position","zIndex","top","left","right","bottom","padding","display","flexDirection","justifyContent","alignItems","color","pointerEvents","fontSize","addRandomSplats","int"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport React, { Component } from \"react\";\nimport FluidAnimation from \"react-fluid-animation\";\nimport random from \"random\";\nimport 'global/styles';\nimport Logo from '../components/Logo';\nimport Nav from '../components/Nav';\n\nconst defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005\n};\n\nexport default class Home extends Component {\n  state = {\n    config: {\n      ...defaultConfig\n    }\n  };\n\n  componentDidMount() {\n    this._reset();\n  }\n\n  render() {\n    const { config } = this.state;\n    const greeting = () => {\n      const today = new Date()\n      const curHr = today.getHours()\n      if (curHr < 12) {\n          return 'morning'  \n      } else if (curHr < 17) {\n          return 'afternoon'  \n      } else {\n          return 'evening'\n      }\n    }\n    return (\n      <>\n      <Head>\n        <title>James Waller | Digital</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Logo />\n      <Nav />\n      <div\n        style={{\n          height: \"100vh\"\n        }}\n      >\n        <FluidAnimation config={config} animationRef={this._animationRef} />\n\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            padding: \"1em 10em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"left\",\n            color: \"#fff\",\n            pointerEvents: \"none\"\n          }}\n        >\n          <h1\n            style={{\n              fontSize: \"6em\",\n            }}\n          >\n            _Good_{greeting()}.\n          </h1>\n        </div>\n      </div>\n      </>\n    );\n  }\n  \n  _animationRef = ref => {\n    this._animation = ref;\n    this._reset();\n  };\n\n  _onUpdate = config => {\n    this.setState({ config });\n  };\n\n  _onClickRandomSplats = () => {\n    this._animation.addSplats((5 + Math.random() * 20) | 0);\n  };\n\n  _onReset = () => {\n    this.setState({ config: { ...defaultConfig } });\n  };\n\n  _reset() {\n    if (this._animation) {\n      this._animation.addRandomSplats(random.int(100, 180));\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}