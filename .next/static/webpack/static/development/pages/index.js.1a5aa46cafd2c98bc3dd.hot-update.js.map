{"version":3,"file":"static/webpack/static/development/pages/index.js.1a5aa46cafd2c98bc3dd.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Head from 'next/head'\nimport React, { Component } from \"react\";\nimport FluidAnimation from \"react-fluid-animation\";\nimport random from \"random\";\nimport Logo from '../components/Logo'\nimport Nav from '../components/Nav'\n\nconst defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005\n};\n\nexport default class Home extends Component {\n  state = {\n    config: {\n      ...defaultConfig\n    }\n  };\n\n  componentDidMount() {\n    this._reset();\n  }\n\n  render() {\n    const { config } = this.state;\n    const greeting = () => {\n      const today = new Date()\n      const curHr = today.getHours()\n      if (curHr < 12) {\n          return 'morning'  \n      } else if (curHr < 17) {\n          return 'afternoon'  \n      } else {\n          return 'evening'\n      }\n    }\n    return (\n      <>\n      <Head>\n        <title>James Waller | Digital</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Logo />\n      <Nav />\n      <div\n        style={{\n          height: \"100vh\"\n        }}\n      >\n        <FluidAnimation config={config} animationRef={this._animationRef} />\n\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            padding: \"1em 10em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"left\",\n            color: \"#fff\",\n            pointerEvents: \"none\"\n          }}\n        >\n          <h1\n            style={{\n              fontSize: \"6em\",\n            }}\n          >\n            _Good_{greeting()}.\n          </h1>\n        </div>\n      </div>\n  \n      <style jsx global>{`\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          font-family: Courier, Helvetica Neue, sans-serif;\n          background-color: #000;\n          color: #fff;\n        }\n  \n        * {\n          box-sizing: border-box;\n        }\n\n        /* Individual item */\n        .bm-item {\n          display: inline-block;\n\n          /* Our sidebar item styling */\n          text-decoration: none;\n          margin-bottom: 10px;\n          color: #000;\n          transition: color 0.2s;\n        }\n\n        .bm-item:focus {\n          outline:0;\n          color: #4663ff;\n        }\n\n        /* Change color on hover */\n        .bm-item:hover {\n          color: #31deff;\n        }\n\n        /* The rest copied directly from react-burger-menu docs */\n\n        /* Position and sizing of burger button */\n        .bm-burger-button {\n          position: fixed;\n          width: 36px;\n          height: 30px;\n          right: 36px;\n          top: 36px;\n        }\n\n        /* Color/shape of burger icon bars */\n        .bm-burger-bars {\n          background: #fff;\n        }\n\n        /* Position and sizing of clickable cross button */\n        .bm-cross-button {\n          height: 24px;\n          width: 24px;\n        }\n\n        /* Color/shape of close button cross */\n        .bm-cross {\n          background: #000;\n        }\n\n        /* General sidebar styles */\n        .bm-menu {\n          background: #fff;\n          padding: 2.5em 1.5em 0;\n          font-size: 1.15em;\n          padding: 2rem 2rem 1.5rem 2rem;\n        }\n\n        /* Morph shape necessary with bubble or elastic */\n        .bm-morph-shape {\n          fill: #373a47;\n        }\n\n        /* Wrapper for item list */\n        .bm-item-list {\n          color: #b8b7ad;\n          padding: 6rem 0 0 0\n        }\n\n        /* Styling of overlay */\n        .bm-overlay {\n          background: rgba(0, 0, 0, 0.3);\n        }\n      `}</style>\n      </>\n    );\n  }\n  \n  _animationRef = ref => {\n    this._animation = ref;\n    this._reset();\n  };\n\n  _onUpdate = config => {\n    this.setState({ config });\n  };\n\n  _onClickRandomSplats = () => {\n    this._animation.addSplats((5 + Math.random() * 20) | 0);\n  };\n\n  _onReset = () => {\n    this.setState({ config: { ...defaultConfig } });\n  };\n\n  _reset() {\n    if (this._animation) {\n      this._animation.addRandomSplats(random.int(100, 180));\n    }\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AA0JA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AArKA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AAiIA;;;AAmBA;AACA;AACA;AACA;AACA;;;;AAjLA;AACA;;;;;A","sourceRoot":""}