{"version":3,"file":"static/webpack/static/development/pages/about.js.22e019f1e9ee856bb303.hot-update.js","sources":["webpack:///./pages/about.js"],"sourcesContent":["// import useSwr from 'swr'\n// import Head from 'next/head'\n// import styled from 'styled-components';\n// import Logo from '../components/Logo'\n// import Nav from '../components/Nav'\n\n// const fetcher = url => fetch(url).then(res => res.json())\n\n// export default function Index() {\n//   const { data, error } = useSwr('/api/about', fetcher)\n\n//   if (error) return <div>Failed to load users</div>\n//   if (!data) return <div>Loading...</div>\n\n//   return (\n//     <>\n//       <Head>\n//         <title>James Waller | Digital</title>\n//         <link rel=\"icon\" href=\"/favicon.ico\" />\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n//       </Head>\n//       <Logo />\n//       <Nav />\n//       {data.map(item => {\n//         console.log('item: ', item)\n//         return (\n//           <Content>\n//             <h1>{item.title}</h1>\n//             {item.paragraph.map(i => {\n//               console.log('i: ', i)\n//               return (\n//                 <p>{i.text}</p>  \n//               )\n//             })}\n//           </Content>\n//         )\n//       }\n//       )}\n//       <style jsx global>{`\n//           html,\n//           body {\n//           padding: 0;\n//           margin: 0;\n//           font-family: Courier, Helvetica Neue, sans-serif;\n//           background-color: #000;\n//           color: #fff;\n//           }\n  \n//           * {\n//           box-sizing: border-box;\n//           }\n//       `}</style>\n//     </>\n//   )\n// }\n\n// const Content = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   padding: 1rem 2rem;\n//   @media screen and (min-width: 1025px) {\n//     padding: 1rem 20rem;\n//   }\n//   font-family: Courier, Helvetica Neue, sans-serif;\n//   h1 {\n//     padding: 7rem 0 0 0;\n//   }\n// }\n// `;\n\nimport React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport useSWR from 'swr'\n\nconst fetcher = query =>\n  fetch('/api/about', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n\nexport default function Index() {\n  const { data, error } = useSWR('{ title { title }, paragraph { id, text }, images { id } }', fetcher)\n\n  if (error) return <div>Failed to load</div>\n  if (!data) return <div>Loading...</div>\n\n  const { nav } = data\n\n  console.log('data: ', data)\n\n  return (\n    <>\n    <Menu right>\n\n    </Menu>\n    <style jsx global>{`\n    .bm-menu-wrap {\n      width: 100% !important;\n    }\n    @media screen and (min-width: 426px) {\n      .bm-menu-wrap {\n        width: 300px !important;\n      }\n    }\n    /* Individual item */\n    .bm-item {\n      display: inline-block;\n\n      /* Our sidebar item styling */\n      text-decoration: none;\n      margin-bottom: 10px;\n      color: #000;\n      transition: color 0.2s;\n    }\n\n    .bm-item:focus {\n      outline:0;\n    }\n\n    /* Change color on hover */\n    .bm-item:hover {\n      color: #31deff;\n    }\n\n    /* The rest copied directly from react-burger-menu docs */\n\n    /* Position and sizing of burger button */\n    .bm-burger-button {\n      position: fixed;\n      width: 36px;\n      height: 30px;\n      right: 36px;\n      top: 36px;\n    }\n\n    /* Color/shape of burger icon bars */\n    .bm-burger-bars {\n      background: #fff;\n    }\n\n    /* Position and sizing of clickable cross button */\n    .bm-cross-button {\n      height: 24px;\n      width: 24px;\n    }\n\n    /* Color/shape of close button cross */\n    .bm-cross {\n      background: #000;\n    }\n\n    /* General sidebar styles */\n    .bm-menu {\n      background: #fff;\n      padding: 2.5em 1.5em 0;\n      font-size: 1.15em;\n      padding: 2rem 2rem 1.5rem 2rem;\n    }\n\n    /* Morph shape necessary with bubble or elastic */\n    .bm-morph-shape {\n      fill: #373a47;\n    }\n\n    /* Wrapper for item list */\n    .bm-item-list {\n      color: #b8b7ad;\n      padding: 6rem 0 0 0\n    }\n\n    /* Styling of overlay */\n    .bm-overlay {\n      background: rgba(0, 0, 0, 0.3);\n    }\n  `}</style>\n  </>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AATA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAsFA;;;;A","sourceRoot":""}